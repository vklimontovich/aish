name: Release

on:
  push:
    tags:
      - 'v*.*.*' # Triggers on tags like v1.0.0, v2.3.1, etc.
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true
      dry_run:
        description: 'Dry run (true/false)'
        required: false
        default: 'false'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required for GoReleaser

      - name: Set version
        id: set_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ inputs.version }}"
          else
            VERSION="${GITHUB_REF_NAME#v}"
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Setting version to $VERSION"

          cat > version.go << EOF
          package main
          var Version = "$VERSION"
          EOF

      - name: Create Git tag (manual run only)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.dry_run != 'true' }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag "v${{ steps.set_version.outputs.VERSION }}"
          git push origin "v${{ steps.set_version.outputs.VERSION }}"

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          install-only: true

      - name: Run GoReleaser
        if: ${{ github.event_name != 'workflow_dispatch' || inputs.dry_run != 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goreleaser release --clean